#!/bin/sh

command=$(basename $0)
tmux_user=${TMUX_USER:-tmux}
ngrok_host=${NGROK_HOST:-ngrok.com}

help(){
  echo "Usage: $command <subcommand> [options]\n"
  echo "Subcommands:"
  echo "    add  Add a github user"
  echo "    rm   Remove a github user"
  echo "    ls   List github users"
  echo "    up   Open shared tmux session"
  echo "    tun  Start a reverse tunnel for pair sharing"
  echo "         See: https://ngrok.com"
  echo ""
  echo "** Full Disclosure: This script uses sudo **"
  echo ""
}

add(){
  sudo su $tmux_user -c "GEM_HOME=$GEM_HOME gh-auth add --users $@"
}

rm(){
  sudo su $tmux_user -c "GEM_HOME=$GEM_HOME gh-auth remove --users $@"
}

ls(){
  sudo su $tmux_user -c "GEM_HOME=$GEM_HOME gh-auth list"
}

up(){
  # Add any users, if specified
  if [[ ! -z $@ ]]; then
    add $@
  fi

  tmux="tmux -S /var/tmux/pairing"
  $tmux new-session -d "pair tun"
  $tmux split-window
  sleep 0.5 # some delay so tunnel has time to get up
  $tmux send-keys "pair copy_tunnel_ssh_command" C-m
  $tmux attach
}

tun(){
  ngrok --proto=tcp 22
}

copy_tunnel_ssh_command(){
  port=$(tunnel_port)

  if [ ! -z $port ]; then
    ssh_command="ssh -p $port $tmux_user@$ngrok_host"
    echo $ssh_command
    echo $ssh_command | reattach-to-user-namespace pbcopy
  else
    echo "Tunnel doesn't seem to be connected."
  fi
}

tunnel_port(){
  tunnel_info_endpoint="http://localhost:4040/http/in"
  search_string="tcp://$ngrok_host"
  port_strip_regex="s/^.*$ngrok_host:\([0-9]*\).*$/\1/"

  curl -s $tunnel_info_endpoint | grep $search_string | sed $port_strip_regex
}

subcommand=$1
case $subcommand in
  '' | '-h' | '--help')
    help ;;
  *)
    shift
    ${subcommand} $@
    ;;
esac
